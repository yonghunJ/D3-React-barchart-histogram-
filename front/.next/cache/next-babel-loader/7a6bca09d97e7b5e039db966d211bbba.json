{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport const Unemployment_Education = data => {\n  const Unemployed = {\n    \"Completed Phd\": 0,\n    \"Some Phd\": 0,\n    \"Completed Masters\": 0,\n    \"Some Masters\": 0,\n    \"Completed Undergraduate\": 0,\n    \"Some Undergraduate\": 0,\n    \"High School or GED\": 0,\n    \"Some highschool\": 0\n  };\n\n  const Employed = _objectSpread({}, Unemployed);\n\n  const un = [];\n  const em = [];\n\n  for (let i = 0; i < data.length; i += 1) {\n    if (data[i].Unemployed === \"1\") {\n      if (Object.keys(Unemployed).includes(data[i].Education)) Unemployed[data[i].Education] += 1;else Unemployed[data[i].Education] = 1;\n    }\n\n    if (data[i].Unemployed === \"0\") {\n      if (Object.keys(Employed).includes(data[i].Education)) Employed[data[i].Education] += 1;else Employed[data[i].Education] = 1;\n    }\n  }\n\n  for (const e in Unemployed) {\n    un.push({\n      \"name\": e,\n      \"height\": Unemployed[e]\n    });\n  }\n\n  for (const e in Employed) {\n    em.push({\n      \"name\": e,\n      \"height\": Employed[e]\n    });\n  }\n\n  return [un, em];\n};\nexport const ResumeeGapAndSalary = data => {\n  const un = [];\n  const em = [];\n  const Unemployed = {\n    \"Under 10\": 0,\n    \"10 - 19\": 0,\n    \"20 - 39\": 0,\n    \"40 - 59\": 0,\n    \"60 - 79\": 0,\n    \"80 - 99\": 0,\n    \"Over 100\": 0\n  };\n\n  const Employed = _objectSpread({}, Unemployed);\n\n  for (let i = 0; i < data.length; i += 1) {\n    if (data[i].Unemployed === \"1\") {\n      if (parseInt(data[i].TotalLengthOfGapsInResume) < 10) {\n        Unemployed[\"Under 10\"] += 1;\n      } else if (parseInt(data[i].TotalLengthOfGapsInResume) < 20) {\n        Unemployed[\"10 - 19\"] += 1;\n      } else if (parseInt(data[i].TotalLengthOfGapsInResume) < 40) {\n        Unemployed[\"20 - 39\"] += 1;\n      } else if (parseInt(data[i].TotalLengthOfGapsInResume) < 60) {\n        Unemployed[\"40 - 59\"] += 1;\n      } else if (parseInt(data[i].TotalLengthOfGapsInResume) < 80) {\n        Unemployed[\"60 - 79\"] += 1;\n      } else if (parseInt(data[i].TotalLengthOfGapsInResume) < 100) {\n        Unemployed[\"80 - 99\"] += 1;\n      } else {\n        Unemployed[\"Over 100\"] += 1;\n      }\n    } else {\n      if (parseInt(data[i].TotalLengthOfGapsInResume) < 10) {\n        Employed[\"Under 10\"] += 1;\n      } else if (parseInt(data[i].TotalLengthOfGapsInResume) < 20) {\n        Employed[\"10 - 19\"] += 1;\n      } else if (parseInt(data[i].TotalLengthOfGapsInResume) < 40) {\n        Employed[\"20 - 39\"] += 1;\n      } else if (parseInt(data[i].TotalLengthOfGapsInResume) < 60) {\n        Employed[\"40 - 59\"] += 1;\n      } else if (parseInt(data[i].TotalLengthOfGapsInResume) < 80) {\n        Employed[\"60 - 79\"] += 1;\n      } else if (parseInt(data[i].TotalLengthOfGapsInResume) < 100) {\n        Employed[\"80 - 99\"] += 1;\n      } else {\n        Employed[\"Over 100\"] += 1;\n      }\n    }\n  }\n\n  for (const e in Unemployed) {\n    un.push({\n      \"name\": e,\n      \"height\": Unemployed[e]\n    });\n  }\n\n  for (const e in Employed) {\n    em.push({\n      \"name\": e,\n      \"height\": Employed[e]\n    });\n  }\n\n  console.log(un, em);\n  return [un, em];\n};\nexport const Age_Depression = data => {\n  const age = {\n    \"45-60\": 0,\n    \"30-44\": 0,\n    \"18-29\": 0,\n    \"> 60\": 0\n  };\n  const un = [];\n\n  for (let i = 0; i < data.length; i += 1) {\n    if (data[i].Depression === \"1\") {\n      if (Object.keys(age).includes(data[i].Age)) age[data[i].Age] += 1;\n    }\n  }\n\n  for (const e in age) {\n    un.push({\n      \"name\": e,\n      \"height\": age[e]\n    });\n  }\n\n  return un;\n}; // Input(3 types) = >$xx,000-$xx,999 , $200,000+, Prefer not to answer\n// Output(Average) = > 75,000 , 200,000\n\nfunction getHouseholdIncome(input) {\n  let money = input.split(\"-$\");\n  let Average = 0;\n\n  if (input === \"$200,000+\") {\n    Average = 200000;\n  } else if (input === \"$0-$9,999\") {\n    Average = 5000;\n  } else {\n    let minMoney = money[0].slice(1, money[0].length - 1).replace(\",\", \"\");\n    console.log(money[1]);\n    let maxMoney = money[1].replace(\",\", \"\");\n    Average = (parseInt(minMoney) + parseInt(maxMoney) + 1) / 2;\n  }\n\n  return Average;\n}\n\nexport const AnnualSalarybyMentalIllness = data => {\n  const self_illness = [];\n  const Nonself_illness = [];\n\n  for (let i = 0; i < data.length; i += 1) {\n    if (data[i].SelfMentalIllness === \"0\") {\n      // self identified illness\n      Nonself_illness.push({\n        \"price\": parseInt(data[i].AnnualIncome)\n      });\n    } else {\n      self_illness.push({\n        \"price\": parseInt(data[i].AnnualIncome)\n      });\n    }\n  }\n\n  return [self_illness, Nonself_illness];\n};\nexport const ResumeGapbyMentalIllness = data => {\n  const self_illness = [];\n  const Nonself_illness = [];\n\n  for (let i = 0; i < data.length; i += 1) {\n    if (data[i].SelfMentalIllness === \"0\") {\n      // self identified illness\n      Nonself_illness.push({\n        \"price\": parseInt(data[i].TotalLengthOfGapsInResume)\n      });\n    } else {\n      self_illness.push({\n        \"price\": parseInt(data[i].TotalLengthOfGapsInResume)\n      });\n    }\n  }\n\n  return [self_illness, Nonself_illness];\n};\nexport const HaveAnxiety_HowManyDaysHospitalized = data => {\n  const have_anxiety = [];\n  const donthave_anxiety = [];\n\n  for (let i = 0; i < data.length; i += 1) {\n    if (data[i].Anxiety === \"0\") {\n      // self identified illness\n      donthave_anxiety.push({\n        \"price\": parseInt(data[i].HowManyDaysHospitalized)\n      });\n    } else {\n      have_anxiety.push({\n        \"price\": parseInt(data[i].HowManyDaysHospitalized)\n      });\n    }\n  }\n\n  return [have_anxiety, donthave_anxiety];\n};","map":{"version":3,"sources":["C:/Users/rrallvv/Documents/2020_spring/visualization/LAB1/HW1/front/src/dataProcesing.js"],"names":["Unemployment_Education","data","Unemployed","Employed","un","em","i","length","Object","keys","includes","Education","e","push","ResumeeGapAndSalary","parseInt","TotalLengthOfGapsInResume","console","log","Age_Depression","age","Depression","Age","getHouseholdIncome","input","money","split","Average","minMoney","slice","replace","maxMoney","AnnualSalarybyMentalIllness","self_illness","Nonself_illness","SelfMentalIllness","AnnualIncome","ResumeGapbyMentalIllness","HaveAnxiety_HowManyDaysHospitalized","have_anxiety","donthave_anxiety","Anxiety","HowManyDaysHospitalized"],"mappings":"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","sourcesContent":["export const Unemployment_Education = (data) =>{\r\n    const Unemployed = {\r\n                        \"Completed Phd\":0,\r\n                        \"Some Phd\":0,\r\n                        \"Completed Masters\":0,\r\n                        \"Some Masters\":0,                           \r\n                        \"Completed Undergraduate\":0,\r\n                        \"Some Undergraduate\":0,\r\n                        \"High School or GED\":0,\r\n                        \"Some highschool\":0}\r\n    const Employed = {...Unemployed}\r\n\r\n    const un = []\r\n    const em = []\r\n    for(let i=0; i <data.length ; i+=1){\r\n        if (data[i].Unemployed === \"1\"){\r\n            if (  Object.keys(Unemployed).includes(data[i].Education) )\r\n                Unemployed[data[i].Education] += 1\r\n            else\r\n                Unemployed[data[i].Education] = 1\r\n        }\r\n        if (data[i].Unemployed === \"0\"){\r\n            if (  Object.keys(Employed).includes(data[i].Education) )\r\n                Employed[data[i].Education] += 1\r\n            else\r\n                Employed[data[i].Education] = 1\r\n        }\r\n    }\r\n\r\n    for(const e in Unemployed){\r\n        un.push({\"name\":e, \"height\": Unemployed[e]})\r\n    }\r\n    for(const e in Employed){\r\n        em.push({\"name\":e, \"height\": Employed[e]})\r\n    }\r\n        return [un,em]\r\n}\r\n\r\nexport const ResumeeGapAndSalary = (data) =>{\r\n    const un = []\r\n    const em = []\r\n\r\n    const Unemployed = {\r\n        \"Under 10\":0,\r\n        \"10 - 19\":0,\r\n        \"20 - 39\":0,\r\n        \"40 - 59\":0,                           \r\n        \"60 - 79\":0,\r\n        \"80 - 99\":0,                           \r\n        \"Over 100\":0,\r\n        }\r\n    const Employed = {...Unemployed}\r\n\r\n    for(let i=0; i <data.length ; i+=1){\r\n        if (data[i].Unemployed === \"1\"){\r\n            if (  parseInt(data[i].TotalLengthOfGapsInResume) <10 ){\r\n                Unemployed[\"Under 10\"] +=1\r\n            }else if(  parseInt(data[i].TotalLengthOfGapsInResume) <20 ){\r\n                Unemployed[\"10 - 19\"] +=1\r\n            }else if(  parseInt(data[i].TotalLengthOfGapsInResume) <40 ){\r\n                Unemployed[\"20 - 39\"] +=1\r\n            }else if(  parseInt(data[i].TotalLengthOfGapsInResume) <60 ){\r\n                Unemployed[\"40 - 59\"] +=1\r\n            }else if(  parseInt(data[i].TotalLengthOfGapsInResume) <80 ){\r\n                Unemployed[\"60 - 79\"] +=1\r\n            }else if(  parseInt(data[i].TotalLengthOfGapsInResume) <100 ){\r\n                Unemployed[\"80 - 99\"] +=1\r\n            }else{\r\n                Unemployed[\"Over 100\"] +=1\r\n            }\r\n        }else{\r\n            if (  parseInt(data[i].TotalLengthOfGapsInResume) <10 ){\r\n                Employed[\"Under 10\"] +=1\r\n            }else if(  parseInt(data[i].TotalLengthOfGapsInResume) <20 ){\r\n                Employed[\"10 - 19\"] +=1\r\n            }else if(  parseInt(data[i].TotalLengthOfGapsInResume) <40 ){\r\n                Employed[\"20 - 39\"] +=1\r\n            }else if(  parseInt(data[i].TotalLengthOfGapsInResume) <60 ){\r\n                Employed[\"40 - 59\"] +=1\r\n            }else if(  parseInt(data[i].TotalLengthOfGapsInResume) <80 ){\r\n                Employed[\"60 - 79\"] +=1\r\n            }else if(  parseInt(data[i].TotalLengthOfGapsInResume) <100 ){\r\n                Employed[\"80 - 99\"] +=1\r\n            }else{\r\n                Employed[\"Over 100\"] +=1\r\n            }\r\n        }\r\n        \r\n    }\r\n    for(const e in Unemployed){\r\n        un.push({\"name\":e, \"height\": Unemployed[e]})\r\n    }\r\n    for(const e in Employed){\r\n        em.push({\"name\":e, \"height\": Employed[e]})\r\n    }\r\n    console.log(un,em)\r\n    return [un,em]\r\n\r\n}\r\n\r\nexport const Age_Depression = (data) => {\r\n    const age = {\r\n        \"45-60\":0,\r\n        \"30-44\":0,\r\n        \"18-29\":0,\r\n        \"> 60\":0}\r\n\r\n    const un = []\r\n\r\n    for(let i=0; i <data.length ; i+=1){\r\n        if (data[i].Depression=== \"1\"){\r\n        if (  Object.keys(age).includes(data[i].Age) )\r\n            age[data[i].Age] += 1\r\n        }\r\n\r\n    }\r\n\r\n    for(const e in age){\r\n    un.push({\"name\":e, \"height\": age[e]})\r\n    }\r\n\r\n    return un\r\n}\r\n\r\n// Input(3 types) = >$xx,000-$xx,999 , $200,000+, Prefer not to answer\r\n// Output(Average) = > 75,000 , 200,000\r\nfunction getHouseholdIncome(input){\r\n    let money = input.split(\"-$\");\r\n\r\n    let Average = 0\r\n\r\n    if (input ===\"$200,000+\"){\r\n        Average = 200000\r\n    }\r\n    else if(input ===\"$0-$9,999\"){\r\n        Average = 5000\r\n    }else{\r\n        \r\n        let minMoney = money[0].slice(1,money[0].length-1).replace(\",\",\"\")\r\n        console.log(money[1])\r\n        let maxMoney = money[1].replace(\",\",\"\")\r\n        Average = (parseInt(minMoney) + parseInt(maxMoney)+1 ) / 2\r\n    }\r\n\r\n    return Average\r\n    \r\n}\r\n\r\nexport const AnnualSalarybyMentalIllness = (data) => {\r\n\r\n\r\n    const self_illness = []\r\n    const Nonself_illness = []\r\n    for(let i=0; i <data.length ; i+=1){\r\n        if(data[i].SelfMentalIllness === \"0\"){ // self identified illness\r\n            Nonself_illness.push({\"price\":parseInt(data[i].AnnualIncome)})\r\n        }else{\r\n            self_illness.push({\"price\":parseInt(data[i].AnnualIncome)})\r\n        }\r\n    }\r\n\r\n\r\n    return [self_illness,Nonself_illness]\r\n\r\n}\r\n\r\nexport const ResumeGapbyMentalIllness = (data) =>{\r\n    const self_illness = []\r\n    const Nonself_illness = []\r\n    for(let i=0; i <data.length ; i+=1){\r\n        if(data[i].SelfMentalIllness === \"0\"){ // self identified illness\r\n            Nonself_illness.push({\"price\":parseInt(data[i].TotalLengthOfGapsInResume)})\r\n        }else{\r\n            self_illness.push({\"price\":parseInt(data[i].TotalLengthOfGapsInResume)})\r\n        }\r\n    }\r\n\r\n\r\n    return [self_illness,Nonself_illness]\r\n}\r\n\r\nexport const HaveAnxiety_HowManyDaysHospitalized = (data) =>{\r\n    const have_anxiety = []\r\n    const donthave_anxiety = []\r\n    for(let i=0; i <data.length ; i+=1){\r\n        if(data[i].Anxiety=== \"0\"){ // self identified illness\r\n            donthave_anxiety.push({\"price\":parseInt(data[i].HowManyDaysHospitalized)})\r\n        }else{\r\n            have_anxiety.push({\"price\":parseInt(data[i].HowManyDaysHospitalized)})\r\n        }\r\n    }\r\n\r\n\r\n    return [have_anxiety,donthave_anxiety]\r\n}   "]},"metadata":{},"sourceType":"module"}